Compiled from "Frame.java"
public class Frame extends Window implements MenuContainer{
    public static final int DEFAULT_CURSOR;
    public static final int CROSSHAIR_CURSOR;
    public static final int TEXT_CURSOR;
    public static final int WAIT_CURSOR;
    public static final int SW_RESIZE_CURSOR;
    public static final int SE_RESIZE_CURSOR;
    public static final int NW_RESIZE_CURSOR;
    public static final int NE_RESIZE_CURSOR;
    public static final int N_RESIZE_CURSOR;
    public static final int S_RESIZE_CURSOR;
    public static final int W_RESIZE_CURSOR;
    public static final int E_RESIZE_CURSOR;
    public static final int HAND_CURSOR;
    public static final int MOVE_CURSOR;
    public static final int NORMAL;
    public static final int ICONIFIED;
    public static final int MAXIMIZED_HORIZ;
    public static final int MAXIMIZED_VERT;
    public static final int MAXIMIZED_BOTH;
    Rectangle maximizedBounds;
    String title;
    MenuBar menuBar;
    boolean resizable;
    boolean undecorated;
    boolean mbManagement;
    java.util.Vector ownedWindows;
    public Frame()       throws HeadlessException;
    public Frame(GraphicsConfiguration);
    public Frame(String)       throws HeadlessException;
    public Frame(String, GraphicsConfiguration);
    String constructComponentName();
    public void addNotify();
    public String getTitle();
    public void setTitle(String);
    public Image getIconImage();
    public void setIconImage(Image);
    public MenuBar getMenuBar();
    public void setMenuBar(MenuBar);
    public boolean isResizable();
    public void setResizable(boolean);
    public synchronized void setState(int);
    public synchronized void setExtendedState(int);
    public synchronized int getState();
    public synchronized int getExtendedState();
    public synchronized void setMaximizedBounds(Rectangle);
    public Rectangle getMaximizedBounds();
    public void setUndecorated(boolean);
    public boolean isUndecorated();
    public void remove(MenuComponent);
    public void removeNotify();
    void postProcessKeyEvent(event.KeyEvent);
    protected String paramString();
    public void setCursor(int);
    public int getCursorType();
    public static Frame[] getFrames();
    public javax.accessibility.AccessibleContext getAccessibleContext();
    static {};
}

